
<!DOCTYPE html>
<!--
파이어 베이스 이용해서 웹서버 구현해봤구요.
기본적으로 본인의 파이어베이스 프로젝트가 있어야 실행이됩니다.
들어가면 바로 구글 계정인증이 됩니다. 페이스북도 가능하구요.
body쪽에
데이버베이스 쓰기 읽기 수정 삭제 구현이 되어있어요.
-->
<html>
    <head>
        <!-- jQuery  -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

    </head>
    <body>
        <a href = "/">▾</a>

        <!-- The core Firebase JS SDK is always required and must be listed first -->
        <script src="https://www.gstatic.com/firebasejs/6.6.1/firebase-app.js"></script>

        <!-- TODO: Add SDKs for Firebase products that you want to use
             https://firebase.google.com/docs/web/setup#config-web-app -->
        <!-- 기능 추가할때마다 소스 받으면 됩니다-->
        <script src="https://www.gstatic.com/firebasejs/6.6.1/firebase-auth.js"></script>
        <script src="https://www.gstatic.com/firebasejs/6.6.1/firebase-database.js"></script>
        <script>

            // Your web app's Firebase configuration
            var firebaseConfig = {
                apiKey: "AIzaSyDXzsBUt8pSmanFTMgG0otklsClBV8HaNE",
                authDomain: "uosyomo.firebaseapp.com",
                databaseURL: "https://uosyomo.firebaseio.com",
                projectId: "uosyomo",
                storageBucket: "uosyomo.appspot.com",
                messagingSenderId: "1034521288050",
                appId: "1:1034521288050:web:e1b96b5250007cff35d1eb"
            };
            // Initialize Firebase
            firebase.initializeApp(firebaseConfig);

            // 구글 인증 기능 추가
            var provider = new firebase.auth.GoogleAuthProvider();
            // 인증하기
            firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)
              .then(firebase.auth().signInWithPopup(provider).then(function(result) {
                // This gives you a Google Access Token. You can use it to access the Google API.
                var token = result.credential.accessToken;
                // The signed-in user info.
                var user = result.user;
                console.log(user)		// 인증 후 어떤 데이터를 받아오는지 확인해보기 위함.
            // ...
              })).catch(function(error) {
                  // Handle Errors here.
                  var errorCode = error.code;
                  var errorMessage = error.message;
                  // The email of the user's account used.
                  var email = error.email;
                  // The firebase.auth.AuthCredential type that was used.
                  var credential = error.credential;
                  // ...
            });
            firebase.auth().onAuthStateChanged(function(user) {
              if (user) {
                // User is signed in.
                console.log('user로그인 : ',JSON.stringify(user));
              } else {
                console.log('로그아웃');
                // No user is signed in.
              }
            });
            /* 주석처리해놨고 하나씩 써보면 된답니다.
            // [데이터베이스] SDK 초기화
            var database = firebase.database();

            // 데이터베이스에 쓰기
            database.ref('test/').push({"name": "테스트", "location": "seoul"})
            // 데이터베이스에서 데이터 읽기
            var dbTestRef = database.ref('test/')
            dbTestRef.on('child_added', function(data){
                console.log(data.val())
            })

            // 데이터베이스 데이터 수정
            // dbTestRef2 = database.ref('test/' + [key값]).update([수정할 값])
            dbTestRef2 = database.ref('test/-Lp8H7ntzY_bi5FFjB9x').update({
                intro: "인삿말 수정"
            })

            // 데이터베이스 데이터 삭제
            dbTestRef3 = database.ref('test/-L4eNay35sc0db4oigfO').remove()
            */
        </script>
    </body>
</html>
